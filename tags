!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
$(NAME)	submit/Makefile	/^$(NAME): $(OBJS)$/;"	t
$(OBJDIR)/%.o	submit/Makefile	/^$(OBJDIR)\/%.o: $(SRCDIR)\/%.c$/;"	t
ARFLAGS	submit/Makefile	/^ARFLAGS := rcs$/;"	m
CC	submit/Makefile	/^CC		:= cc$/;"	m
CFLAGS	submit/Makefile	/^CFLAGS	:= -Wall -Wextra -Werror$/;"	m
DSTSIZE	test/ts_strlcat.c	/^#define DSTSIZE /;"	d	file:
INCDIR	submit/Makefile	/^INCDIR	:=	. $/;"	m
LIBFT_H	submit/libft.h	/^# define LIBFT_H$/;"	d
MKDIR	submit/Makefile	/^MKDIR	:=	mkdir -p$/;"	m
NAME	submit/Makefile	/^NAME	:=	libft.a$/;"	m
OBJDIR	submit/Makefile	/^OBJDIR	:=	objs$/;"	m
OBJS	submit/Makefile	/^OBJS	:= $(SRCS:%.c=$(OBJDIR)\/%.o)$/;"	m
SRCDIR	submit/Makefile	/^SRCDIR	:=	srcs\/$/;"	m
SRCS	submit/Makefile	/^SRCS	:=	ft_isalpha.c \\$/;"	m
all	submit/Makefile	/^all: $(NAME)$/;"	t
clean	submit/Makefile	/^clean: $/;"	t
content	submit/libft.h	/^	void			*content;$/;"	m	struct:s_list	typeref:typename:void *
fclean	submit/Makefile	/^fclean: clean$/;"	t
free_array	submit/srcs/ft_split.c	/^static char	**free_array(char **arr)$/;"	f	typeref:typename:char **	file:
ft_atoi	submit/srcs/ft_atoi.c	/^int	ft_atoi(const char *nptr)$/;"	f	typeref:typename:int
ft_bzero	submit/srcs/ft_bzero.c	/^void	ft_bzero(void *s, size_t n)$/;"	f	typeref:typename:void
ft_calloc	submit/srcs/ft_calloc.c	/^void	*ft_calloc(size_t nmemb, size_t size)$/;"	f	typeref:typename:void *
ft_free	test/ts_split.c	/^static char	**ft_free(char **s)$/;"	f	typeref:typename:char **	file:
ft_isalnum	submit/srcs/ft_isalnum.c	/^int	ft_isalnum(int c)$/;"	f	typeref:typename:int
ft_isalpha	submit/srcs/ft_isalpha.c	/^int	ft_isalpha(int c)$/;"	f	typeref:typename:int
ft_isascii	submit/srcs/ft_isascii.c	/^int	ft_isascii(int c)$/;"	f	typeref:typename:int
ft_isdigit	submit/srcs/ft_isdigit.c	/^int	ft_isdigit(int c)$/;"	f	typeref:typename:int
ft_islower	submit/srcs/ft_isalpha.c	/^static int	ft_islower(int c)$/;"	f	typeref:typename:int	file:
ft_islower	submit/srcs/ft_toupper.c	/^static int	ft_islower(int c)$/;"	f	typeref:typename:int	file:
ft_isprint	submit/srcs/ft_isprint.c	/^int	ft_isprint(int c)$/;"	f	typeref:typename:int
ft_issign	submit/srcs/ft_atoi.c	/^static int	ft_issign(char c)$/;"	f	typeref:typename:int	file:
ft_isspace	submit/srcs/ft_atoi.c	/^static int	ft_isspace(char c)$/;"	f	typeref:typename:int	file:
ft_isupper	submit/srcs/ft_isalpha.c	/^static int	ft_isupper(int c)$/;"	f	typeref:typename:int	file:
ft_isupper	submit/srcs/ft_tolower.c	/^static int	ft_isupper(int c)$/;"	f	typeref:typename:int	file:
ft_itoa	submit/srcs/ft_itoa.c	/^char	*ft_itoa(int n)$/;"	f	typeref:typename:char *
ft_memchr	submit/srcs/ft_memchr.c	/^void	*ft_memchr(const void *s, int c, size_t n)$/;"	f	typeref:typename:void *
ft_memcmp	submit/srcs/ft_memcmp.c	/^int	ft_memcmp(const void *s1, const void *s2, size_t n)$/;"	f	typeref:typename:int
ft_memcpy	submit/srcs/ft_memcpy.c	/^void	*ft_memcpy(void *dest, const void *src, size_t n)$/;"	f	typeref:typename:void *
ft_memmove	submit/srcs/ft_memmove.c	/^void	*ft_memmove(void *dest, const void *src, size_t n)$/;"	f	typeref:typename:void *
ft_memset	submit/srcs/ft_memset.c	/^void	*ft_memset(void *s, int c, size_t n)$/;"	f	typeref:typename:void *
ft_putchar_fd	submit/srcs/ft_putchar_fd.c	/^void	ft_putchar_fd(char c, int fd)$/;"	f	typeref:typename:void
ft_putendl_fd	submit/srcs/ft_putendl_fd.c	/^void	ft_putendl_fd(char *s, int fd)$/;"	f	typeref:typename:void
ft_putnbr_fd	submit/srcs/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/;"	f	typeref:typename:void
ft_putstr_fd	submit/srcs/ft_putstr_fd.c	/^void	ft_putstr_fd(char *s, int fd)$/;"	f	typeref:typename:void
ft_split	submit/srcs/ft_split.c	/^char	**ft_split(char const *s, char c)$/;"	f	typeref:typename:char **
ft_strchr	submit/srcs/ft_strchr.c	/^char	*ft_strchr(const char *s, int c)$/;"	f	typeref:typename:char *
ft_strdup	submit/srcs/ft_strdup.c	/^char	*ft_strdup(const char *s)$/;"	f	typeref:typename:char *
ft_striteri	submit/srcs/ft_striteri.c	/^void	ft_striteri(char *s, void (*f)(unsigned int, char*))$/;"	f	typeref:typename:void
ft_strjoin	submit/srcs/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/;"	f	typeref:typename:char *
ft_strlcat	submit/srcs/ft_strlcat.c	/^size_t	ft_strlcat(char *dst, const char *src, size_t size)$/;"	f	typeref:typename:size_t
ft_strlcpy	submit/srcs/ft_strlcpy.c	/^size_t	ft_strlcpy(char *dst, const char *src, size_t size)$/;"	f	typeref:typename:size_t
ft_strlen	submit/srcs/ft_strlen.c	/^size_t	ft_strlen(const char *s)$/;"	f	typeref:typename:size_t
ft_strmapi	submit/srcs/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned int, char))$/;"	f	typeref:typename:char *
ft_strncmp	submit/srcs/ft_strncmp.c	/^int	ft_strncmp(const char *s1, const char *s2, size_t n)$/;"	f	typeref:typename:int
ft_strnstr	submit/srcs/ft_strnstr.c	/^char	*ft_strnstr(const char *big, const char *little, size_t len)$/;"	f	typeref:typename:char *
ft_strrchr	submit/srcs/ft_strrchr.c	/^char	*ft_strrchr(const char *s, int c)$/;"	f	typeref:typename:char *
ft_strtrim	submit/srcs/ft_strtrim.c	/^char	*ft_strtrim(char const *s1, char const *set)$/;"	f	typeref:typename:char *
ft_substr	submit/srcs/ft_substr.c	/^char	*ft_substr(char const *s, unsigned int start, size_t len)$/;"	f	typeref:typename:char *
ft_tolower	submit/srcs/ft_tolower.c	/^int	ft_tolower(int c)$/;"	f	typeref:typename:int
ft_toupper	submit/srcs/ft_toupper.c	/^int	ft_toupper(int c)$/;"	f	typeref:typename:int
get_len	submit/srcs/ft_itoa.c	/^static size_t	get_len(long n)$/;"	f	typeref:typename:size_t	file:
get_len	submit/srcs/ft_substr.c	/^static size_t	get_len(size_t s_len, unsigned int start, size_t len)$/;"	f	typeref:typename:size_t	file:
get_nb	submit/srcs/ft_atoi.c	/^static int	get_nb(const char *nptr)$/;"	f	typeref:typename:int	file:
get_str	submit/srcs/ft_itoa.c	/^static char	*get_str(char *str, long n)$/;"	f	typeref:typename:char *	file:
main	refer/cfg/calloc.c	/^int	main(void)$/;"	f	typeref:typename:int
main	refer/cfg/memcpy.c	/^int	main(void)$/;"	f	typeref:typename:int
main	refer/cfg/mn_str.c	/^int	main(void)$/;"	f	typeref:typename:int
main	refer/cfg/strlcpy.c	/^int	main(void)$/;"	f	typeref:typename:int
main	refer/cfg/strncmp.c	/^int	main(void)$/;"	f	typeref:typename:int
main	refer/char_int.c	/^int	main(void)$/;"	f	typeref:typename:int
main	refer/input_null.c	/^int	main(void)$/;"	f	typeref:typename:int
main	test/ts_atoi.c	/^int	main(void)$/;"	f	typeref:typename:int
main	test/ts_itoa.c	/^int	main(void)$/;"	f	typeref:typename:int
main	test/ts_memcpy.c	/^int     main(void)$/;"	f	typeref:typename:int
main	test/ts_putnbr_fd.c	/^int	main(void)$/;"	f	typeref:typename:int
main	test/ts_split.c	/^int	main(void)$/;"	f	typeref:typename:int
main	test/ts_strchr.c	/^int	main(void)$/;"	f	typeref:typename:int
main	test/ts_strlcat.c	/^int	main(void)$/;"	f	typeref:typename:int
main	test/ts_strlcpy.c	/^int	main(void)$/;"	f	typeref:typename:int
main	test/ts_strmapi.c	/^int	main(void)$/;"	f	typeref:typename:int
main	test/ts_strnstr.c	/^int	main(void)$/;"	f	typeref:typename:int
main	test/ts_strtrim.c	/^int	main(void)$/;"	f	typeref:typename:int
main	test/ts_substr.c	/^int	main(void)$/;"	f	typeref:typename:int
man_strlcat	refer/cfg/mn_str.c	/^void	man_strlcat(void)$/;"	f	typeref:typename:void
man_strlcpy	refer/cfg/mn_str.c	/^void	man_strlcpy(void)$/;"	f	typeref:typename:void
man_strncmp	refer/cfg/mn_str.c	/^void	man_strncmp(void)$/;"	f	typeref:typename:void
next	submit/libft.h	/^	struct s_list	*next;$/;"	m	struct:s_list	typeref:struct:s_list *
put	refer/input_null.c	/^void	put(char *s)$/;"	f	typeref:typename:void
re	submit/Makefile	/^re: fclean all$/;"	t
s_list	submit/libft.h	/^typedef struct s_list$/;"	s
t_list	submit/libft.h	/^}				t_list;$/;"	t	typeref:struct:s_list
to_upper	test/ts_strmapi.c	/^char	to_upper(unsigned int indent, char c)$/;"	f	typeref:typename:char
word_count	submit/srcs/ft_split.c	/^static size_t	word_count(char const *s, char c)$/;"	f	typeref:typename:size_t	file:
